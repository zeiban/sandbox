{"ts":1340764829020,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"window.requestAnimFrame = (function() {\r\n  return window.requestAnimationFrame ||\r\n         window.webkitRequestAnimationFrame ||\r\n         window.mozRequestAnimationFrame ||\r\n         window.oRequestAnimationFrame ||\r\n         window.msRequestAnimationFrame ||\r\n         function(/* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\r\n           window.setTimeout(callback, 1000/60);\r\n         };\r\n})();\r\n\r\nvar canvas, ctx;\r\n\r\nvar lastTime = 0;\r\nvar deltaTime = 0;\r\nvar startTime = 0;\r\nvar elapsedTime = 0;\r\nvar nextFPSUpdateTime = 0;\r\n\r\nvar isConnected = false;\r\nvar isAuthenticated = false;\r\nvar playerId = 0;\r\nfunction onResize(){\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n}\r\n\r\nvar objects = {};\r\n\r\nfunction update() {\r\n    for(var prop in objects) {\r\n        var obj = objects[prop];\r\n        obj.position.x += obj.velocity.x*deltaTime;\r\n        obj.position.y += obj.velocity.y*deltaTime;\r\n    }\r\n}\r\n\r\nrequire(['Messages'], function(Messages) {\r\n    var socket = io.connect();\r\n    socket.on('connect', function () {\r\n        console.log('Connected');\r\n        isConnected = true;\r\n        var out ={\r\n            id:Messages.LOGIN,\r\n            data:{\r\n                email:'email@domain.com',\r\n                password:'password'\r\n            }\r\n        };\r\n        socket.json.send(out);\r\n        socket.on('disconnect', function () {\r\n            console.log('Disconnected');\r\n        });\r\n    \r\n        socket.on('message', function (msg) {\r\n//            console.log('Received: ' + msg.id);\r\n            if(msg.id === Messages.LOGIN) {\r\n                var retval = msg.data.retval;\r\n                if(retval === 0) {\r\n                    console.log('Authentication: Success');\r\n                    isAuthenticated = true;\r\n                    playerId = msg.data.id;\r\n                } else if (retval === 1) {\r\n                    console.log('Authentication: Invalid email or password');\r\n                } else if (retval === 2) {\r\n                    console.log('Authentication: Account disabled');\r\n                } else {\r\n                    console.log('Authentication: Unknown login response ' + retval);\r\n                }\r\n            } else if (msg.id === Messages.OBJECT) {\r\n                objects[msg.data.id] = msg.data.properties;\r\n            }\r\n        });\r\n    });\r\n    \r\n    function draw(){\r\n        if(isConnected) {\r\n            if(isAuthenticated){\r\n                ctx.fillStyle = 'gray';\r\n                ctx.fillRect(0,0,canvas.width, canvas.height);\r\n                \r\n                for (var prop in objects) {\r\n                    var obj = objects[prop];\r\n                    ctx.beginPath();\r\n                    ctx.arc(obj.position.x+(canvas.width*0.5), obj.position.y+(canvas.height*0.5), 5, 0, 2 * Math.PI, false);\r\n                    if(parseInt(prop) === playerId) {\r\n                        ctx.fillStyle = \"red\";\r\n                    } else {\r\n                        ctx.fillStyle = \"green\";\r\n                    }\r\n                    ctx.fill();\r\n                }\r\n            } else {\r\n                ctx.fillStyle = 'white';\r\n                ctx.fillText(\"Authenticating\", 10, 50);  \r\n            }\r\n        } else {\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillText(\"Connecting\", 10, 50);  \r\n        }\r\n    }\r\n    function frame(){\r\n        var currentTime = new Date().getTime();\r\n        if(startTime === 0) {\r\n            startTime = currentTime;\r\n        }\r\n        elapsedTime = (currentTime - startTime) / 1000;\r\n\r\n        if (lastTime !== 0) {\r\n            deltaTime = (currentTime - lastTime) / 1000;\r\n    \r\n        }\r\n        lastTime = currentTime;\r\n        if(elapsedTime > nextFPSUpdateTime) {\r\n            console.log(Math.round((1/deltaTime)));\r\n            nextFPSUpdateTime = elapsedTime + 1.0;\r\n        }\r\n        window.requestAnimFrame(frame);\r\n        update();\r\n        draw();\r\n    }\r\n    \r\n    window.addEventListener('resize', onResize, false);\r\n    \r\n    canvas = document.createElement(\"canvas\");\r\n    ctx = canvas.getContext(\"2d\");\r\n    document.body.appendChild(canvas); \r\n    onResize();\r\n\r\n    frame();\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":4189}]],"length":4189}
{"contributors":[],"silentsave":false,"ts":1340770336423,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"function update() {\r\n    for(var prop in objects) {\r\n        var obj = objects[prop];\r\n        obj.position.x += obj.velocity.x*deltaTime;\r\n        obj.position.y += obj.velocity.y*deltaTime;\r\n    }\r\n}\r\n"],[0,"\r\nre"]],"start1":766,"start2":766,"length1":211,"length2":8},{"diffs":[[0,"essages'"],[1,",'Input'"],[0,"], funct"]],"start1":783,"start2":783,"length1":16,"length2":24},{"diffs":[[0,"Messages"],[1,",Input"],[0,") {\r\n   "]],"start1":811,"start2":811,"length1":16,"length2":22},{"diffs":[[0," });\r\n    \r\n"],[1,"    function update() {\r\n        for(var prop in objects) {\r\n            var obj = objects[prop];\r\n            if(parseInt(prop) === playerId) {\r\n                if(Input.isKeyDown(Input.Keys.A)) {\r\n                    socket.json.sent({id:Messages.MOVE_LEFT});\r\n                }\r\n                if(Input.isKeyDown(Input.Keys.D)) {\r\n                    socket.json.sent({id:Messages.MOVE_RIGHT});\r\n                }\r\n            }\r\n            obj.position.x += obj.velocity.x*deltaTime;\r\n            obj.position.y += obj.velocity.y*deltaTime;\r\n        }\r\n    }\r\n    \r\n"],[0,"    function"]],"start1":2176,"start2":2176,"length1":24,"length2":596}]],"length":4572,"saved":false}
{"contributors":[],"silentsave":false,"ts":1340798228606,"patch":[[{"diffs":[[0,"s,Input) {\r\n"],[1,"    \r\n"],[0,"    var sock"]],"start1":818,"start2":818,"length1":24,"length2":30},{"diffs":[[0,"   });\r\n    });\r"],[1,"\n\r\n    window.addEventListener('keydown', function(){\r\n        if(event.keyCode === Input.Keys.A) {\r\n            socket.json.sent({id:Messages.MOVE_LEFT,data:{state:1}});\r\n        } else if (event.keyCode === Input.Keys.D) {\r\n            socket.json.sent({id:Messages.MOVE_RIGHT,data:{state:1}});\r\n        }\r\n    }, false);\r\n    \r\n    window.addEventListener('keyup', function(){\r\n        if(event.keyCode === Input.Keys.A) {\r\n            socket.json.sent({id:Messages.MOVE_LEFT,data:{state:0}});\r\n        } else if (event.keyCode === Input.Keys.D) {\r\n            socket.json.sent({id:Messages.MOVE_RIGHT,data:{state:0}});\r\n        }\r\n    }, false);\r"],[0,"\n    \r\n    funct"]],"start1":2171,"start2":2171,"length1":32,"length2":682},{"diffs":[[0,"Keys.A)) {\r\n"],[1,"//"],[0,"            "]],"start1":3031,"start2":3031,"length1":24,"length2":26},{"diffs":[[0,"VE_LEFT});\r\n"],[-1,""],[0,"            "]],"start1":3097,"start2":3097,"length1":24,"length2":24},{"diffs":[[0,"Keys.D)) {\r\n"],[1,"//"],[0,"            "]],"start1":3169,"start2":3169,"length1":24,"length2":26},{"diffs":[[0,"VE_RIGHT"],[1,",data{}"],[0,"});\r\n   "]],"start1":3235,"start2":3235,"length1":16,"length2":23}]],"length":5239,"saved":false}
